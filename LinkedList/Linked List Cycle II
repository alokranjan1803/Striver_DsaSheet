/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    

    ListNode *detectCycle(ListNode *head) {
        if(head == NULL){
            return NULL;
        }

        if(head->next == NULL){
            return NULL;
        }

        ListNode* slow = head;
        ListNode* fast = head;
        

        while(fast){
            fast = fast->next;
            if(fast){
                fast = fast->next;
                slow = slow->next;
            }
            if(fast == slow ){
               
                break;
            }
        }
        slow = head;

        while(slow!=fast ){
            slow = slow->next;
            if(fast){
                fast = fast->next;
            }
            
        }
        return slow;   
    }
};

// T.C - O(N)
// S.C - O(1)
