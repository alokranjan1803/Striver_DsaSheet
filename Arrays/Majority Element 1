class Solution {
public:
    int majorityElement(vector<int>& nums) {
        std::unordered_map<int, int> freqMap;
        int n = nums.size();

        for (int num : nums) {
            freqMap[num]++;
            if (freqMap[num] > n / 2) {
                return num;
            }
        }
            
        return -1;
    }
};

// T.C - O(N)
// S.C - O(N)



// BOYER MOORE VOTING ALGORITHM

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int majEle = nums[0];
        int count = 1;

        for(int i=1; i<nums.size(); i++){
            if(count == 0){
                majEle = nums[i];
                count = 1;

            }
            else if(nums[i] == majEle){
                count++;
            }
            else{
                count--;
            }
        }
        return majEle;
        
    }
};

// T.C - O(N)
// S.C - O(1)
