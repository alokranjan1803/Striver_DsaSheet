/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode* > q;

        q.push(root);
        if(!root){
                return ans;
        }

        while(!q.empty()){
            int level_size = q.size();
            vector<int> level;
            
            for(int i=0; i<level_size; i++){
                TreeNode* curr = q.front();
                q.pop();
                
                if(curr->left){
                    q.push(curr->left);
                }
                if(curr->right){
                    q.push(curr->right);
                }
                level.push_back(curr->val);
                
            }
            ans.push_back(level);
        }
       return ans; 
    }
};
