/* A binary tree node has data, pointer to left child
   and a pointer to right child 
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

// Should return  right view of tree
class Solution
{
    public:
    //Function to return list containing elements of right view of binary tree.
    void rightView(Node* root, vector<int>& ans, int level){
        // base case
        if(root == NULL){
            return;
        }
        
        if(ans.size() == level){
            ans.push_back(root->data);
        }
        
        // right call 
        rightView(root->right, ans, level+1);
        
        // left call
        rightView(root->left, ans, level+1);
    }
    
    vector<int> rightView(Node *root)
    {
        vector<int> ans;
        int level = 0;
        
        rightView(root, ans, level);
        return ans;
        
       // Your Code here
    }
};

